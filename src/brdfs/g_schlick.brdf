analytic

# Schlick94 G term

# variables go here...
# only floats supported right now.
# [type] [name] [min val] [max val] [default val]

::begin parameters
float m 0 1 .5
bool includeInvNdotLNdotV 0
::end parameters

# Then comes the shader. This should be GLSL code
# that defines a function called BRDF (although you can
# add whatever else you want too, like sqr() below).

::begin shader
float PI = 3.14159265358979323846;

float G(float v, float m)
{
    float k = sqrt(2*m*m/PI);
    return v > 0 ? v/(v-k*v + k) : 0.0;
}

vec3 BRDF( vec3 L, vec3 V, vec3 N, vec3 X, vec3 Y )
{
    float NdotL = dot(N, L);
    float NdotV = dot(N, V);

    float G = G(NdotL, m) * G(NdotV, m);
    if (includeInvNdotLNdotV) G *= 1/(NdotL*NdotV);
    return vec3(G);
}

::end shader
